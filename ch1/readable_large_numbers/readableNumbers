#!/bin/bash
# niceNumber--Given a number, shows it in comma-separated form.
#   Expects DD (decimal point delimiter) and TD (thousands delimiter)
#   to be instantiated. Instantiates nicenum or, if a second arg is
#   specified, the output is echoed to stdout.

niceNumber()
{
  # Note that we assume that '.' is the decimal separator in the INPUT value
  #   to this script. The decimal separator in the output value is '.'. unless
  #   specified by the userwith the -d flag.

  integer=$(echo $1 | cut -d. -f1)    # Left of the decimal
  decimal=$(echo $1 | cut -d. -f2)    # Right of the decimal

  # Check if number has more than the integer part.
  if [ "$decimal" != "$1" ]; then
    result="${DD:= '.'}$decimal"
  fi

  thousands=$integer

  while [ $thousands -gt 999 ]; do
    remainder=$(($thousands % 1000))    # Three least significant digits

    while [ ${remainder} -lt 3 ] ; do
      remainder="0$remainder"
    done

    result="${TD:=","}${remainder}${result}"    # Builds right to Left
    thousands=$(($thousands / 1000))            # To left of remainder, if any done
  done

  nicenum="${thousands}${result}"
  if [ ! -z $2 ] ; then
    echo $nicenum
  fi
}

DD="."
TD=","


# BEGIN MAIN SCRIPT
# =================

while getopts "d:t:" opt; do
  case $opt in
    d ) DD="$OPTARG"    ;;
    t ) TD="$OPTARG"    ;;
  esac
done

shift $(($OPTIND - 1))

# Input validation
if [ $# -eq 0 ] ; then
  echo "Usage: $(basename $0) [-d c] [-t c] number"
  echo "  -d specifies the decimal point delimiter"
  echo "  -t specifies the thousands delimiter"
  exit 0
fi

niceNumber $1 1   # Second arg forces niceNumber to 'echo' output.

exit 0
